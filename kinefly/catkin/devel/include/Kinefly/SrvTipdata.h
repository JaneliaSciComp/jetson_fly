// Generated by gencpp from file Kinefly/SrvTipdata.msg
// DO NOT EDIT!


#ifndef KINEFLY_MESSAGE_SRVTIPDATA_H
#define KINEFLY_MESSAGE_SRVTIPDATA_H

#include <ros/service_traits.h>


#include <Kinefly/SrvTipdataRequest.h>
#include <Kinefly/SrvTipdataResponse.h>


namespace Kinefly
{

struct SrvTipdata
{

typedef SrvTipdataRequest Request;
typedef SrvTipdataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SrvTipdata
} // namespace Kinefly


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::Kinefly::SrvTipdata > {
  static const char* value()
  {
    return "dfbfbbdaf6b697dcfe44a2c6db1262ae";
  }

  static const char* value(const ::Kinefly::SrvTipdata&) { return value(); }
};

template<>
struct DataType< ::Kinefly::SrvTipdata > {
  static const char* value()
  {
    return "Kinefly/SrvTipdata";
  }

  static const char* value(const ::Kinefly::SrvTipdata&) { return value(); }
};


// service_traits::MD5Sum< ::Kinefly::SrvTipdataRequest> should match 
// service_traits::MD5Sum< ::Kinefly::SrvTipdata > 
template<>
struct MD5Sum< ::Kinefly::SrvTipdataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::Kinefly::SrvTipdata >::value();
  }
  static const char* value(const ::Kinefly::SrvTipdataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::Kinefly::SrvTipdataRequest> should match 
// service_traits::DataType< ::Kinefly::SrvTipdata > 
template<>
struct DataType< ::Kinefly::SrvTipdataRequest>
{
  static const char* value()
  {
    return DataType< ::Kinefly::SrvTipdata >::value();
  }
  static const char* value(const ::Kinefly::SrvTipdataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::Kinefly::SrvTipdataResponse> should match 
// service_traits::MD5Sum< ::Kinefly::SrvTipdata > 
template<>
struct MD5Sum< ::Kinefly::SrvTipdataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::Kinefly::SrvTipdata >::value();
  }
  static const char* value(const ::Kinefly::SrvTipdataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::Kinefly::SrvTipdataResponse> should match 
// service_traits::DataType< ::Kinefly::SrvTipdata > 
template<>
struct DataType< ::Kinefly::SrvTipdataResponse>
{
  static const char* value()
  {
    return DataType< ::Kinefly::SrvTipdata >::value();
  }
  static const char* value(const ::Kinefly::SrvTipdataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KINEFLY_MESSAGE_SRVTIPDATA_H
